{"version":3,"sources":["images/pokelogo.png","data/pokemons.js","components/Pokemon.js","components/PokeList.js","components/Background.js","components/App.js","serviceWorker.js","index.js"],"names":["module","exports","pokemons","id","name","types","evolution","url","Pokemon","props","useState","disabled","setEnabled","clicked","className","onClick","src","pokemon","alt","map","type","key","index","PokeList","pokemonLis","Background","pokelogo","App","losPokemons","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"+FAAAA,EAAOC,QAAU,IAA0B,sC,8IC2L5BC,G,KA3LE,CACf,CACEC,GAAI,EACJC,KAAM,YACNC,MAAO,CAAC,SAAU,SAClBC,UAAW,KACXC,IACE,kFAEJ,CACEJ,GAAI,EACJC,KAAM,UACNC,MAAO,CAAC,SAAU,SAClBC,UAAW,YACXC,IACE,kFAEJ,CACEJ,GAAI,EACJC,KAAM,WACNC,MAAO,CAAC,SAAU,SAClBC,UAAW,UACXC,IACE,kFAEJ,CACEJ,GAAI,EACJC,KAAM,aACNC,MAAO,CAAC,QACRC,UAAW,KACXC,IACE,kFAEJ,CACEJ,GAAI,EACJC,KAAM,aACNC,MAAO,CAAC,QACRC,UAAW,aACXC,IACE,kFAEJ,CACEJ,GAAI,EACJC,KAAM,YACNC,MAAO,CAAC,SAAU,QAClBC,UAAW,aACXC,IACE,kFAEJ,CACEJ,GAAI,EACJC,KAAM,WACNC,MAAO,CAAC,SACRC,UAAW,KACXC,IACE,kFAEJ,CACEJ,GAAI,EACJC,KAAM,YACNC,MAAO,CAAC,SACRC,UAAW,WACXC,IACE,kFAEJ,CACEJ,GAAI,EACJC,KAAM,YACNC,MAAO,CAAC,SACRC,UAAW,YACXC,IACE,kFAEJ,CACEJ,GAAI,GACJC,KAAM,WACNC,MAAO,CAAC,OACRC,UAAW,KACXC,IACE,mFAEJ,CACEJ,GAAI,GACJC,KAAM,UACNC,MAAO,CAAC,OACRC,UAAW,KACXC,IACE,mFAEJ,CACEJ,GAAI,GACJC,KAAM,aACNC,MAAO,CAAC,MAAO,UACfC,UAAW,KACXC,IACE,mFAEJ,CACEJ,GAAI,GACJC,KAAM,SACNC,MAAO,CAAC,MAAO,UACfC,UAAW,KACXC,IACE,mFAEJ,CACEJ,GAAI,GACJC,KAAM,SACNC,MAAO,CAAC,MAAO,UACfC,UAAW,KACXC,IACE,mFAEJ,CACEJ,GAAI,GACJC,KAAM,WACNC,MAAO,CAAC,MAAO,UACfC,UAAW,KACXC,IACE,mFAEJ,CACEJ,GAAI,GACJC,KAAM,SACNC,MAAO,CAAC,SAAU,UAClBC,UAAW,KACXC,IACE,mFAEJ,CACEJ,GAAI,GACJC,KAAM,YACNC,MAAO,CAAC,SAAU,UAClBC,UAAW,KACXC,IACE,mFAEJ,CACEJ,GAAI,GACJC,KAAM,UACNC,MAAO,CAAC,SAAU,UAClBC,UAAW,KACXC,IACE,mFAEJ,CACEJ,GAAI,GACJC,KAAM,UACNC,MAAO,CAAC,UACRC,UAAW,KACXC,IACE,mFAEJ,CACEJ,GAAI,GACJC,KAAM,WACNC,MAAO,CAAC,UACRC,UAAW,KACXC,IACE,mFAEJ,CACEJ,GAAI,GACJC,KAAM,UACNC,MAAO,CAAC,SAAU,UAClBC,UAAW,KACXC,IACE,mFAEJ,CACEJ,GAAI,GACJC,KAAM,SACNC,MAAO,CAAC,SAAU,UAClBC,UAAW,KACXC,IACE,mFAEJ,CACEJ,GAAI,GACJC,KAAM,QACNC,MAAO,CAAC,UACRC,UAAW,KACXC,IACE,qFCnKSC,EAjBC,SAACC,GAAW,IAAD,EACMC,oBAAS,GADf,mBAClBC,EADkB,KACRC,EADQ,KAEnBC,EAAUF,EAAW,GAAK,UAEhC,OACE,wBAAIG,UAAU,OAAOX,GAAIU,EAASE,QAAS,kBAAMH,GAAYD,KAC3D,yBAAKK,IAAKP,EAAMQ,QAAQV,IAAKW,IAAKT,EAAML,OACxC,uBAAGU,UAAU,QAAQL,EAAMQ,QAAQb,MACnC,4BACGK,EAAMQ,QAAQZ,MAAMc,KAAI,SAAcC,GACrC,OAAO,wBAAIC,IAAKD,EAAKE,OAAQF,SCOxBG,EAhBE,SAACd,GAChB,IAAMe,EAAaf,EAAMP,SAASiB,KAAI,SAACF,GACrC,OACE,wBAAII,IAAKJ,EAAQd,IACf,kBAAC,EAAD,CAASc,QAASA,QAKxB,OACE,6BACE,wBAAIH,UAAU,aAAaU,K,gBCHlBC,MARf,WACE,OACE,yBAAKX,UAAU,QACb,yBAAKA,UAAU,OAAOE,IAAKU,IAAUR,IAAI,cCYhCS,EAbH,WAAO,IAAD,EACwBjB,mBAASR,GAA1C0B,EADS,oBAIhB,OACE,6BACE,kBAAC,EAAD,MACA,wBAAId,UAAU,UAAd,sBACA,kBAAC,EAAD,CAAUZ,SAAU0B,MCFNC,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MACvB,2DCZNC,IAASC,OACP,kBAAC,IAAMC,WAAP,KACE,kBAAC,EAAD,OAEFC,SAASC,eAAe,SDyHpB,kBAAmBC,WACrBA,UAAUC,cAAcC,MACrBC,MAAK,SAAAC,GACJA,EAAaC,gBAEdC,OAAM,SAAAC,GACLC,QAAQD,MAAMA,EAAME,c","file":"static/js/main.e842b4d2.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/pokelogo.f7f10aa2.png\";","const pokemons = [\n  {\n    id: 1,\n    name: 'bulbasaur',\n    types: ['poison', 'grass'],\n    evolution: null,\n    url:\n      'https://raw.githubusercontent.com/PokeAPI/sprites/master/sprites/pokemon/1.png',\n  },\n  {\n    id: 2,\n    name: 'ivysaur',\n    types: ['poison', 'grass'],\n    evolution: 'bulbasaur',\n    url:\n      'https://raw.githubusercontent.com/PokeAPI/sprites/master/sprites/pokemon/2.png',\n  },\n  {\n    id: 3,\n    name: 'venusaur',\n    types: ['poison', 'grass'],\n    evolution: 'ivysaur',\n    url:\n      'https://raw.githubusercontent.com/PokeAPI/sprites/master/sprites/pokemon/3.png',\n  },\n  {\n    id: 4,\n    name: 'charmander',\n    types: ['fire'],\n    evolution: null,\n    url:\n      'https://raw.githubusercontent.com/PokeAPI/sprites/master/sprites/pokemon/4.png',\n  },\n  {\n    id: 5,\n    name: 'charmeleon',\n    types: ['fire'],\n    evolution: 'charmander',\n    url:\n      'https://raw.githubusercontent.com/PokeAPI/sprites/master/sprites/pokemon/5.png',\n  },\n  {\n    id: 6,\n    name: 'charizard',\n    types: ['flying', 'fire'],\n    evolution: 'charmeleon',\n    url:\n      'https://raw.githubusercontent.com/PokeAPI/sprites/master/sprites/pokemon/6.png',\n  },\n  {\n    id: 7,\n    name: 'squirtle',\n    types: ['water'],\n    evolution: null,\n    url:\n      'https://raw.githubusercontent.com/PokeAPI/sprites/master/sprites/pokemon/7.png',\n  },\n  {\n    id: 8,\n    name: 'wartortle',\n    types: ['water'],\n    evolution: 'squirtle',\n    url:\n      'https://raw.githubusercontent.com/PokeAPI/sprites/master/sprites/pokemon/8.png',\n  },\n  {\n    id: 9,\n    name: 'blastoise',\n    types: ['water'],\n    evolution: 'wartortle',\n    url:\n      'https://raw.githubusercontent.com/PokeAPI/sprites/master/sprites/pokemon/9.png',\n  },\n  {\n    id: 10,\n    name: 'caterpie',\n    types: ['bug'],\n    evolution: null,\n    url:\n      'https://raw.githubusercontent.com/PokeAPI/sprites/master/sprites/pokemon/10.png',\n  },\n  {\n    id: 11,\n    name: 'metapod',\n    types: ['bug'],\n    evolution: null,\n    url:\n      'https://raw.githubusercontent.com/PokeAPI/sprites/master/sprites/pokemon/11.png',\n  },\n  {\n    id: 12,\n    name: 'butterfree',\n    types: ['bug', 'flying'],\n    evolution: null,\n    url:\n      'https://raw.githubusercontent.com/PokeAPI/sprites/master/sprites/pokemon/12.png',\n  },\n  {\n    id: 13,\n    name: 'weedle',\n    types: ['bug', 'poison'],\n    evolution: null,\n    url:\n      'https://raw.githubusercontent.com/PokeAPI/sprites/master/sprites/pokemon/13.png',\n  },\n  {\n    id: 14,\n    name: 'kakuna',\n    types: ['bug', 'poison'],\n    evolution: null,\n    url:\n      'https://raw.githubusercontent.com/PokeAPI/sprites/master/sprites/pokemon/14.png',\n  },\n  {\n    id: 15,\n    name: 'beedrill',\n    types: ['bug', 'poison'],\n    evolution: null,\n    url:\n      'https://raw.githubusercontent.com/PokeAPI/sprites/master/sprites/pokemon/15.png',\n  },\n  {\n    id: 16,\n    name: 'pidgey',\n    types: ['normal', 'flying'],\n    evolution: null,\n    url:\n      'https://raw.githubusercontent.com/PokeAPI/sprites/master/sprites/pokemon/16.png',\n  },\n  {\n    id: 17,\n    name: 'pidgeotto',\n    types: ['normal', 'flying'],\n    evolution: null,\n    url:\n      'https://raw.githubusercontent.com/PokeAPI/sprites/master/sprites/pokemon/17.png',\n  },\n  {\n    id: 18,\n    name: 'pidgeot',\n    types: ['normal', 'flying'],\n    evolution: null,\n    url:\n      'https://raw.githubusercontent.com/PokeAPI/sprites/master/sprites/pokemon/18.png',\n  },\n  {\n    id: 19,\n    name: 'rattata',\n    types: ['normal'],\n    evolution: null,\n    url:\n      'https://raw.githubusercontent.com/PokeAPI/sprites/master/sprites/pokemon/19.png',\n  },\n  {\n    id: 20,\n    name: 'raticate',\n    types: ['normal'],\n    evolution: null,\n    url:\n      'https://raw.githubusercontent.com/PokeAPI/sprites/master/sprites/pokemon/20.png',\n  },\n  {\n    id: 21,\n    name: 'spearow',\n    types: ['normal', 'flying'],\n    evolution: null,\n    url:\n      'https://raw.githubusercontent.com/PokeAPI/sprites/master/sprites/pokemon/21.png',\n  },\n  {\n    id: 22,\n    name: 'fearow',\n    types: ['normal', 'flying'],\n    evolution: null,\n    url:\n      'https://raw.githubusercontent.com/PokeAPI/sprites/master/sprites/pokemon/22.png',\n  },\n  {\n    id: 23,\n    name: 'ekans',\n    types: ['poison'],\n    evolution: null,\n    url:\n      'https://raw.githubusercontent.com/PokeAPI/sprites/master/sprites/pokemon/23.png',\n  },\n];\n\nexport default pokemons;\n","import React, { useState } from 'react';\nimport '..//stylesheets/App.css';\n\nconst Pokemon = (props) => {\n  const [disabled, setEnabled] = useState(true);\n  const clicked = disabled ? '' : 'enabled';\n\n  return (\n    <li className='card' id={clicked} onClick={() => setEnabled(!disabled)}>\n      <img src={props.pokemon.url} alt={props.name} />\n      <p className='name'>{props.pokemon.name}</p>\n      <ul>\n        {props.pokemon.types.map(function algo(type) {\n          return <li key={type.index}>{type}</li>;\n        })}\n      </ul>\n    </li>\n  );\n};\n\nexport default Pokemon;\n","import React from 'react';\nimport '..//stylesheets/App.css';\nimport Pokemon from './Pokemon.js';\n\nconst PokeList = (props) => {\n  const pokemonLis = props.pokemons.map((pokemon) => {\n    return (\n      <li key={pokemon.id}>\n        <Pokemon pokemon={pokemon} />\n      </li>\n    );\n  });\n\n  return (\n    <div>\n      <ul className='container'>{pokemonLis}</ul>\n    </div>\n  );\n};\n\nexport default PokeList;\n","import React from 'react';\nimport '..//stylesheets/App.css';\nimport pokelogo from '../images/pokelogo.png';\n\nfunction Background() {\n  return (\n    <div className='logo'>\n      <img className='hola' src={pokelogo} alt='Pokemon' />\n    </div>\n  );\n}\n\nexport default Background;\n","import React, { useState } from 'react';\nimport '..//stylesheets/App.css';\nimport pokemons from '../data/pokemons.js';\nimport PokeList from './PokeList';\nimport Background from './Background';\n\nconst App = () => {\n  const [losPokemons /*, setPokemons*/] = useState(pokemons);\n  // console.log(pokemons);\n\n  return (\n    <div>\n      <Background />\n      <h1 className='titulo'> Personal pokedex </h1>\n      <PokeList pokemons={losPokemons} />\n    </div>\n  );\n};\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './components/App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\nserviceWorker.unregister();\n"],"sourceRoot":""}